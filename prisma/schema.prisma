// prisma/schema.prisma
datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

model User {
  id                 Int          @id @default(autoincrement())
  createdAt          DateTime     @default(now())
  phoneNumber        String?
  username           String?
  country            String?
  image              String?
  email              String       @unique
  ads                Ad[]
  chats              Chat[]
  messagesSent       Message[]    @relation("sentMessages")
  messagesReceived   Message[]    @relation("receivedMessages")
  favoriteAds        FavoriteAd[]
  shop               Shop[]
  subscriptions      Subscription[]
  company            Company?     
}

model Subscription {
  id                 Int          @id @default(autoincrement())
  endpoint           String
  p256dh             String
  auth               String
  userId             Int
  user               User         @relation(fields: [userId], references: [id])
}


model JobPost {
  id                 Int       @id @default(autoincrement())
  title              String
  company            Company   @relation(fields: [companyId], references: [id])
  companyId          Int
  description        String
  city               String?
  jobCategory        String
  salary             String?
  experience         String
  applicantsCount    Int?
  postedAt           DateTime @default(now())
  careerLevel        String?
  languages          String?
  nationality        String?
  benefits           String?
  skills             String?
  gender             String?
  employmentType     String?
  educationLevel     String?
  cvRequired         Boolean?
  requirements       String?
}


model Company {
  id                 Int       @id @default(autoincrement())
  name               String
  description        String
  phone              String
  industry           String
  city               String
  logoUrl            String?
  jobPosts           JobPost[]
  user               User       @relation(fields: [userId], references: [id]) 
  userId             Int        @unique
}

model Shop {
  id                  Int      @id @default(autoincrement())
  user                User     @relation(fields: [userId], references: [id])
  userId              Int      
  shopCategory        String   @default("cars")
  shopName            String  
  city                String?  
  bgColor             String?  
  country             String?  
  bgImage             String  @default("https://cloud.elsewedy-automation.com/nextcloud/apps/sharingpath/mahm0ud/upload/Rectangle%2023787.png")
  shopImage           String?  
  description         String?  
  facebookLink        String?
  twitterLink         String?
  instagramLink       String?
  tiktokLink          String?
  snapchatLink        String?
  phoneNumber1        String?
  phoneNumber2        String?
  ads                 Ad[]
}

model Image {
  id   Int    @id @default(autoincrement())
  url  String
  ad   Ad     @relation(fields: [adId], references: [id])
  adId Int
}

model Ad {
  id                     Int          @id @default(autoincrement())
  user                   User?        @relation(fields: [userId], references: [id])
  userId                 Int?
  shop                   Shop?        @relation(fields: [shopId], references: [id])
  shopId                 Int?
  createdAt              DateTime     @default(now())
  Adimages               Image[]
  description            String?
  country                String?
  color                  String?
  brand                  String
  EnginCapacity          String
  category               String
  carType                String
  model                  String
  year                   String
  carStatus              String
  transmission           String
  fuelType               String
  meterRange             String
  paintType              String
  payment                String
  price                  String
  name                   String
  RegionalSpecifications String
  city                   String?
  CarChassis             String?
  extraFeatures          String?
  adStatus               String       @default("active")
  favoritedBy            FavoriteAd[]
  views                  Int          @default(0)
  clicks                 Int          @default(0)
}

model FavoriteAd {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  ad        Ad       @relation(fields: [adId], references: [id])
  adId      Int
  createdAt DateTime @default(now())
}

model Chat {
  id       Int       @id @default(autoincrement())
  users    User[]
  messages Message[]
}

model Message {
  id            Int      @id @default(autoincrement())
  content       String
  sender        User     @relation("sentMessages", fields: [senderEmail], references: [email])
  senderEmail   String
  receiver      User?    @relation("receivedMessages", fields: [receiverEmail], references: [email])
  receiverEmail String?
  createdAt     DateTime @default(now())
  chatId        Int
  chat          Chat     @relation(fields: [chatId], references: [id])
}

